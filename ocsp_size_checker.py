import time

from websites import webs
from ocspchecker import ocspchecker
import base64
from brotli import brotli
import requests

import os

def h():
    a = bytearray(os.urandom(908))
    a = 1

    tot = 0
    has_Cert = 0
    for website in ['taobao.com']:
        try:
            ocsp_request, response, hascert = ocspchecker.get_ocsp_status(website)
            if hascert:
                has_Cert += 1
                break
            tot += 1
        except:
            pass

    print(tot, has_Cert)

lum_resolvers_asn = [15169, 20473, 36692, 14061, 30607, 24940, 27725]
lst = ['206.204.248.67', '193.135.111.7', '193.232.240.49', '172.70.200.73', '172.70.217.73', '103.239.36.20', '193.232.240.51', '141.105.133.8', '193.232.236.49', '193.135.111.17', '103.171.12.99', '172.70.249.190', '70.34.248.7', '172.70.84.72', '155.190.195.72', '198.183.201.12', '172.70.136.73', '193.135.111.1', '103.204.246.184', '193.232.241.49', '155.190.195.68', '181.189.117.3', '172.71.14.69', '146.70.92.12', '172.70.146.179', '31.14.75.25', '155.190.195.69', '45.238.144.6', '103.168.137.254', '172.71.5.73', '172.70.241.72', '193.232.247.48', '216.238.102.100', '103.132.221.2', '195.234.59.80', '103.178.216.10', '103.170.115.114', '172.70.173.113', '155.190.195.64', '172.70.173.110', '103.178.217.10', '172.68.162.73', '194.39.108.39', '172.70.249.192', '172.70.161.71', '103.170.17.11', '179.63.144.2', '69.67.151.117', '192.231.175.3', '202.129.209.2', '45.179.23.4', '172.70.253.70', '103.176.94.2', '172.70.235.73', '172.70.173.111', '172.71.9.72', '45.179.23.6', '172.70.209.178', '192.145.70.192', '193.232.247.51', '172.70.190.69', '172.70.149.74', '187.251.133.2', '179.125.107.2', '70.34.198.246', '45.5.217.3', '172.70.205.72', '193.135.111.9', '155.190.195.70', '103.168.127.2', '172.70.221.70', '181.189.117.2', '172.70.193.70', '172.71.93.73', '193.232.236.50', '193.232.241.51', '172.70.146.180', '8.212.181.172', '193.135.111.13', '172.70.62.73', '172.70.241.74', '146.70.111.108', '177.234.200.10', '103.168.136.254', '124.158.186.42', '172.70.239.73', '89.38.131.38', '177.234.205.124', '146.70.67.52', '172.71.97.87', '172.70.161.72', '146.70.118.34', '193.232.240.48', '172.71.5.74', '193.135.111.21', '172.70.146.181', '90.84.9.66', '172.70.84.71', '129.149.56.47', '176.122.118.97', '186.226.90.132', '172.70.229.72', '172.70.213.73', '8.212.182.196', '172.70.145.203', '103.168.181.43', '138.0.178.138', '193.232.241.48', '193.232.247.49', '212.146.188.72', '162.158.135.79', '45.183.98.148', '172.70.217.75', '177.84.201.191', '172.71.21.72', '128.201.210.1', '185.224.63.167', '193.232.236.51', '172.70.88.51', '172.70.217.74', '5.59.170.253', '141.105.133.9', '193.135.111.15', '103.154.129.158', '172.70.173.112', '172.70.245.74', '193.135.111.19', '103.170.115.115', '163.116.228.22', '103.174.71.10', '155.190.195.73', '172.70.145.202', '172.70.133.122', '159.223.47.29', '103.170.17.10', '102.218.244.4', '45.173.93.2', '172.70.141.52', '193.232.240.50', '23.88.83.126', '172.70.249.191', '192.231.175.2', '90.84.9.67', '172.70.186.71', '89.58.24.75', '176.126.159.18', '45.89.23.1', '102.90.33.202', '172.70.205.73', '172.70.133.120', '206.204.248.66', '5.59.170.252', '162.158.81.75', '46.166.95.253', '168.194.174.62', '172.71.93.75', '155.190.195.66', '172.70.141.54', '172.71.2.70', '172.70.236.73', '172.70.88.50', '172.70.241.73', '46.252.7.50', '172.71.16.6', '193.135.111.11', '45.222.128.4', '172.70.205.74', '103.138.71.3', '172.71.93.74', '172.70.209.203', '163.116.228.21', '106.77.174.195', '193.232.241.50', '67.219.110.174', '159.146.7.250', '103.162.207.236', '172.71.29.73', '45.238.144.4', '187.244.54.129', '172.70.145.201', '151.236.198.94', '155.190.195.67', '45.5.216.3', '172.71.5.11', '172.70.88.8', '103.108.35.110', '172.70.238.73', '103.77.155.238', '172.70.153.74', '155.190.195.71', '45.161.152.60', '90.84.8.109', '103.175.51.185', '193.162.130.1', '172.71.0.73', '167.250.221.250', '172.70.232.10', '212.146.188.73', '172.71.81.73', '190.52.64.10', '172.70.141.53', '172.70.221.69', '172.70.133.121', '128.201.210.11', '172.71.25.75', '172.71.101.75', '172.70.196.69', '172.70.224.69', '45.222.128.3', '193.232.247.50', '213.5.135.2', '83.220.167.40', '45.179.23.5', '172.70.209.202', '31.14.75.41', '146.70.118.36', '212.146.172.92', '188.0.68.201', '172.70.249.189', '168.121.56.244', '172.70.202.74', '213.5.135.3', '155.190.195.65', '146.70.92.20']
lst = set(lst)
for i in lst:
    try:
        r = requests.get(url="http://ip-api.com/json/{}".format(i))
        asn = r.json()['as'].split(" ")[0][2:]
        if int(asn) in lum_resolvers_asn:
            print(i, asn)
        time.sleep(1)
    except Exception as e:
        print(e, i)
        culprit_set = ["155.190.195.70",
                       "155.190.195.66",
                       "155.190.195.68",
                       "216.238.102.100",
                       "70.34.248.7",
                       "155.190.195.65",
                       "23.88.83.126",
                       "155.190.195.72",
                       "159.223.47.29",
                       "155.190.195.67",
                       "155.190.195.69",
                       "155.190.195.64",
                       "155.190.195.71",
                       "67.219.110.174",
                       "155.190.195.73",
                       "70.34.198.246"]

